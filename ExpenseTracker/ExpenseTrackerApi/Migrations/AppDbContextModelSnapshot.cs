// <auto-generated />
using System;
using ExpenseTrackerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTrackerApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IconUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bec59df6-193c-4fd1-b5cc-ad2ca5adada4"),
                            CreatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3283),
                            Name = "Food & Dining",
                            UpdatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3284),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        },
                        new
                        {
                            Id = new Guid("a8f53a53-8211-4db9-aa57-b9b1768d12da"),
                            CreatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3293),
                            Name = "Housing",
                            UpdatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3294),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        },
                        new
                        {
                            Id = new Guid("a9c7504b-6f1c-4ac5-b9da-7ee1e7feef65"),
                            CreatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3299),
                            Name = "Transportation",
                            UpdatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3300),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        },
                        new
                        {
                            Id = new Guid("e5eb8240-3080-4cdc-830e-f773fac48548"),
                            CreatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3304),
                            Name = "Health & Wellness",
                            UpdatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(3305),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        });
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Finance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("FinanceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa"),
                            CreatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(2574),
                            Email = "tavanvinh172@gmail.com",
                            FullName = "Vinh",
                            PasswordHash = "$2a$11$CaL.cJ7iJzDDW05Y6z8kf.j5RX2M6PrXoh2la.8n4SL2LxeBxob26",
                            UpdatedAt = new DateTime(2024, 12, 23, 8, 39, 33, 372, DateTimeKind.Utc).AddTicks(2578)
                        });
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Budget", b =>
                {
                    b.HasOne("ExpenseTrackerApi.Entities.Category", "Category")
                        .WithMany("Budgets")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ExpenseTrackerApi.Entities.User", "Users")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Category", b =>
                {
                    b.HasOne("ExpenseTrackerApi.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Finance", b =>
                {
                    b.HasOne("ExpenseTrackerApi.Entities.Category", "Category")
                        .WithMany("Finances")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTrackerApi.Entities.User", "Users")
                        .WithMany("Finances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Category", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Finances");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Categories");

                    b.Navigation("Finances");
                });
#pragma warning restore 612, 618
        }
    }
}
