// <auto-generated />
using System;
using ExpenseTrackerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTrackerApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241216031157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IconUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("194c5e46-a93a-4e2f-a494-44b52f756dcc"),
                            CreatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1065),
                            Name = "Food & Dining",
                            UpdatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1065),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        },
                        new
                        {
                            Id = new Guid("48f80e69-2492-4b7d-af2d-c20df5bfb023"),
                            CreatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1068),
                            Name = "Housing",
                            UpdatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1069),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        },
                        new
                        {
                            Id = new Guid("3b0655c9-b8e2-48f0-b2fc-6e12e2764335"),
                            CreatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1070),
                            Name = "Transportation",
                            UpdatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1071),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        },
                        new
                        {
                            Id = new Guid("c38bc430-25e2-4f75-93ec-641a2e1b824c"),
                            CreatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1072),
                            Name = "Health & Wellness",
                            UpdatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(1073),
                            UserId = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa")
                        });
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Finance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("FinanceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d2003ec-b650-4609-b987-8a8da342f1fa"),
                            CreatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(862),
                            Email = "tavanvinh172@gmail.com",
                            FullName = "Vinh",
                            PasswordHash = "$2a$11$CaL.cJ7iJzDDW05Y6z8kf.j5RX2M6PrXoh2la.8n4SL2LxeBxob26",
                            UpdatedAt = new DateTime(2024, 12, 16, 3, 11, 57, 493, DateTimeKind.Utc).AddTicks(865)
                        });
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Budget", b =>
                {
                    b.HasOne("ExpenseTrackerApi.Entities.Category", "Category")
                        .WithMany("Budgets")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ExpenseTrackerApi.Entities.User", "Users")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Category", b =>
                {
                    b.HasOne("ExpenseTrackerApi.Entities.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Finance", b =>
                {
                    b.HasOne("ExpenseTrackerApi.Entities.Category", "Category")
                        .WithMany("Finances")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTrackerApi.Entities.User", "Users")
                        .WithMany("Finances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.Category", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Finances");
                });

            modelBuilder.Entity("ExpenseTrackerApi.Entities.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Categories");

                    b.Navigation("Finances");
                });
#pragma warning restore 612, 618
        }
    }
}
